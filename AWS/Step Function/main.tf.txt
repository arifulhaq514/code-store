# main.tf

provider "aws" {
  region = var.region
}

resource "aws_instance" "example" {
  ami           = "ami-038bba9a164eb3dc1" # Replace with the latest Amazon Linux AMI ID for your region
  instance_type = var.instance_type
  key_name      = "KeyPair2024_4" # Replace with your existing EC2 key pair name

  tags = {
    Name = "Terraform Example EC2 Instance"
  }
}

resource "aws_iam_role" "lambda_execution_role" {
  name = "lambda_execution_role"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "lambda.amazonaws.com"
      },
      "Effect": "Allow",
      "Sid": ""
    }
  ]
}
EOF
}

resource "aws_iam_role_policy_attachment" "lambda_execution_policy" {
  role       = aws_iam_role.lambda_execution_role.name
  policy_arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
}

resource "aws_iam_role_policy_attachment" "ec2_control_policy" {
  role       = aws_iam_role.lambda_execution_role.name
  policy_arn = "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
}

resource "aws_lambda_function" "shutdown_instance" {
  filename         = "lambda_function_payload.zip"
  function_name    = "shutdown_instance"
  role             = aws_iam_role.lambda_execution_role.arn
  handler          = "lambda_function.lambda_handler"
  runtime          = "python3.9"

  environment {
    variables = {
      INSTANCE_ID = aws_instance.example.id
    }
  }
}

resource "aws_s3_bucket" "lambda_bucket" {
  bucket = "lambda-code-bucket-${random_id.bucket_id.hex}"
  acl    = "private"
}

resource "random_id" "bucket_id" {
  byte_length = 4
}

resource "aws_s3_object" "lambda_zip" {
  bucket = aws_s3_bucket.lambda_bucket.id
  key    = "lambda_function_payload.zip"
  source = "./lambda_function_payload.zip"
}

resource "aws_stepfunctions_state_machine" "shutdown_state_machine" {
  name     = "shutdown_state_machine"
  role_arn = aws_iam_role.lambda_execution_role.arn

  definition = <<EOF
{
  "Comment": "State Machine to shut down EC2 instance",
  "StartAt": "ShutdownInstance",
  "States": {
    "ShutdownInstance": {
      "Type": "Task",
      "Resource": "${aws_lambda_function.shutdown_instance.arn}",
      "End": true
    }
  }
}
EOF
}